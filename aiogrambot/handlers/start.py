from aiogram import F, Router
from aiogram.exceptions import TelegramBadRequest
from aiogram.filters import Command, CommandStart
from aiogram.types import Message, CallbackQuery, InputMediaPhoto

from aiogrambot.database.models import Measurement
from aiogrambot.database.repository import Good
from aiogrambot.keyboards.inline import InlineAdmin, InlineCategory, InlineGood
from aiogrambot.utils.callback_helpers import callback_message_editor
from aiogrambot.utils.user_helpers import check_users

start_router = Router()

@start_router.message(CommandStart())
async def cmd_start(message: Message):
    telegram_id = message.from_user.id
    await message.answer('''–û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –≤–∫—É—Å –Ω–∞—Å—Ç–æ—è—â–µ–π –¥–æ–º–∞—à–Ω–µ–π –µ–¥—ã —Å –ú–∞–º–∏–Ω–æ–π –ö—É—Ö–Ω–µ–πüë©üèº‚Äçüç≥''',
                         reply_markup=await InlineAdmin.inline_is_admin(telegram_id=telegram_id))


@start_router.callback_query(F.data == 'back_to_start')
async def start_back_to_start(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–∞–ª–æ–≥!')
    telegram_id = callback.from_user.id
    await callback.message.edit_text('''–û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –≤–∫—É—Å –Ω–∞—Å—Ç–æ—è—â–µ–π –¥–æ–º–∞—à–Ω–µ–π –µ–¥—ã —Å –ú–∞–º–∏–Ω–æ–π –ö—É—Ö–Ω–µ–πüë©üèº‚Äçüç≥''',
                                     reply_markup=await InlineAdmin.inline_is_admin(telegram_id=telegram_id))


@start_router.callback_query(F.data == 'start_catalog')
async def catalog(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–∞–ª–æ–≥!')
    telegram_id = callback.from_user.id
    await check_users(telegram_id)
    await callback.message.edit_text(
        '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤',
        reply_markup=await InlineCategory.inline_categories())

@start_router.callback_query(F.data.startswith('category_'))
async def category(callback: CallbackQuery):
    # await callback.answer(f'–í—ã –≤—ã–±—Ä–∞–ª–∏ {callback.data.split('_')[1]}!')

    await callback_message_editor(
        callback=callback,
        text='–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é',
        reply_markup=await InlineGood.inline_goods(category_id=int(callback.data.split('_')[-1]))
    )



@start_router.callback_query(F.data.startswith('good_'))
async def category(callback: CallbackQuery):

    good_id = int(callback.data.split('_')[-1])
    good = await Good.select_good(good_id=good_id)
    await callback.answer(f"–í—ã –≤—ã–±—Ä–∞–ª–∏ {good.get('name')}")
    text = (f"{good.get('name')}\n {good.get('description')}\n "
            f"{good.get('price')}—Ä / {Measurement[good.get('measurement')].value}")
    try:
        await callback.message.edit_media(
            media = InputMediaPhoto(
                media=good.get('image_id'),
                caption=text
            )
        )
    except TelegramBadRequest:
        await callback.message.edit_text(
            text=text
        )

    await callback.message.edit_reply_markup(reply_markup = await InlineGood.inline_good(good))
